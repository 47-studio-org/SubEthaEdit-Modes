<?xml version="1.0" encoding="UTF-8"?>
<syntax>
	<head>
		<name>Django-Template</name>
		<autocompleteoptions use-spelling-dictionary="yes"/>
		<charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens>
	</head>
	<states>
		<default id="Base" color="#000" usesymbolsfrommode="HTML" useautocompletefrommode="HTML">
			<!-- Borrowed From ERB Mode -->
			<keywords id="Entities" color="#881280" useforautocomplete="no">
				<regex>(&amp;\w{1,8};)</regex>
				<regex>(&amp;#[0-9]+;)</regex>
				<regex>(&amp;#x[A-Fa-f0-9]+;)</regex>
			</keywords>
			<!-- JB -->
			<state id="Django-Template" color="#000000" usesymbolsfrommode="Django-Template" useautocompletefrommode="Django-Template">
				<begin>
					<regex>{{|{%|{#</regex>
				</begin>
				<end>
					<regex>}}|%}|#}</regex>
				</end>
				<keywords id="Template Tag" color="#DD0000" invert-color="#FF2121" useforautocomplete="yes">
					<regex>({%|%})</regex>
				</keywords>
				<keywords id="Context Variable" color="#DD0000" invert-color="#FF2121" useforautocomplete="yes">
					<regex>({{|}})</regex>
				</keywords>
				<keywords id="Template Tags" color="#881350" invert-color="#EC76B4" useforautocomplete="yes">
					<!-- Template Tags -->
					<string>autoescape</string>
					<string>block</string>
					<string>comment</string>
					<string>csrf_token</string>
					<string>cycle</string>
					<string>debug</string>
					<string>else</string>
					<string>empty</string>
					<string>endblock</string>
					<string>endcomment</string>
					<string>endfilter</string>
					<string>endfor</string>
					<string>endif</string>
					<string>endifchanged</string>
					<string>endifequal</string>
					<string>endifnotequal</string>
					<string>endspaceless</string>
					<string>endwith</string>
					<string>extends</string>
					<string>filter</string>
					<string>firstof</string>
					<string>for</string>
					<string>if</string>
					<string>ifchanged</string>
					<string>ifequal</string>
					<string>ifnotequal</string>
					<string>in</string>
					<string>include</string>
					<string>load</string>
					<string>now</string>
					<string>regroup</string>
					<string>spaceless</string>
					<string>ssi</string>
					<string>templatetag</string>
					<string>url</string>
					<string>widthratio</string>
					<string>with</string>
					<!-- Logic Statements -->
					<string>and</string>
					<string>as</string>
					<string>by</string>
					<string>not</string>
					<string>or</string>
				</keywords>
				<keywords id="Context Variables" color="#825900" invert-color="#FFD67C" useforautocomplete="yes">
					<regex>{{ (.*?) }}</regex>
				</keywords>
				<keywords id="Filters" color="#008C8C" invert-color="#73FFFF" useforautocomplete="yes">
					<regex>(\|[\w_]+)</regex>
				</keywords>
				<keywords id="Double Quoted Strings" type="string" color="#760F15" invert-color="#F0898E" useforautocomplete="no">
					<regex>(".*?")</regex>
				</keywords>
				<keywords id="Single Quoted Strings" type="string" color="#760F15" invert-color="#F0898E" useforautocomplete="no">
					<regex>('.*?')</regex>
				</keywords>
				<keywords id="Filter Parameters" color="#003369" invert-color="#95C9FF">
					<regex>(:".*?")</regex>
					<regex>(:'.*?')</regex>
					<regex>(:\d+)</regex>
				</keywords>
				<keywords id="Django Comment" type="comment" color="#236E25" invert-color="#91DC93" font-style="italic">
					<regex>({# .*? #})</regex>
				</keywords>
			</state>
			<!-- Borrowed From ERB Mode -->
			<state id="Comment" type="comment" color="#236E25" font-style="italic">
				<begin>
					<regex>&lt;!--</regex>
				</begin>
				<end>
					<regex>--&gt;</regex>
				</end>
				<keywords id="SGML Double Dash" color="#f00" font-weight="normal" useforautocomplete="no">
					<regex>(?&lt;!\!)(--)(?!&gt;)</regex>
				</keywords>
				<state-link state="Django-Template"/>
			</state>
			<state id="CDATA" color="#FF0000" font-style="italic">
				<begin>
					<regex>&lt;!\s*\[CDATA\s*\[</regex>
				</begin>
				<end>
					<regex>\]\s*\]\s*&gt;</regex>
				</end>
				<state-link state="Django-Template"/>
			</state>
			<state id="Doctype" color="#236E25" font-style="italic">
				<begin>
					<regex>&lt;!</regex>
				</begin>
				<end>
					<regex>&gt;</regex>
				</end>
				<state-link state="Django-Template"/>
			</state>
			<state id="Escape" color="#236E25" font-style="normal">
				<begin>
					<regex>&lt;\?</regex>
				</begin>
				<end>
					<regex>\?&gt;</regex>
				</end>
				<state-link state="Django-Template"/>
			</state>
			<state id="Inline CSS" color="#000000" font-style="normal" usesymbolsfrommode="CSS" useautocompletefrommode="CSS">
				<begin>
					<regex>&lt;(?=style)</regex>
				</begin>
				<end>
					<regex>/style&gt;</regex>
				</end>
				<keywords id="Style Tags" color="#881280" font-style="normal">
					<regex>(\A&lt;\Z)</regex>
					<regex>(&lt;/style[^&gt;]*&gt;)</regex>
				</keywords>
				<state id="Opening Style Tag" color="#881280" font-style="normal" usesymbolsfrommode="HTML" useautocompletefrommode="HTML">
					<begin>
						<regex>\Astyle</regex>
					</begin>
					<end>
						<regex>&gt;</regex>
					</end>
					<import state="Tags"/>
				</state>
				<state-link state="Django-Template"/>
				<state id="Inside curly brackets" color="#000" background-color="#fff" font-weight="normal" font-style="normal">
					<begin>
						<string>{</string>
					</begin>
					<end>
						<regex>}</regex>
					</end>
					<import mode="CSS" state="Inside curly brackets" keywords-only="yes"/>
					<state-link state="Django-Template"/>
					<state-link state="CSSComment"/>
					<state-link state="CSSRound bracket"/>
					<state-link state="CSSString"/>
					<state-link state="CSSSingleString"/>
				</state>
				<state id="CSSComment" type="comment" color="#236E25" font-weight="normal" font-style="italic">
					<begin>
						<string>/\*</string>
					</begin>
					<end>
						<regex>\*/</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<state id="CSSRound bracket" type="string" color="#760f15" font-weight="normal" font-style="normal">
					<begin>
						<string>\(</string>
					</begin>
					<end>
						<regex>\)</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<state id="CSSString" type="string" color="#760f15" font-weight="normal" font-style="normal">
					<begin>
						<string>"</string>
					</begin>
					<end>
						<regex>(((?&lt;!\\)(\\\\)*)|^)"</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<state id="CSSSingleString" type="string" color="#760f15" font-weight="normal" font-style="normal">
					<begin>
						<string>'</string>
					</begin>
					<end>
						<regex>(((?&lt;!\\)(\\\\)*)|^)'</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
			</state>
			<state id="Inline Javascript" color="#000000" usesymbolsfrommode="Javascript" useautocompletefrommode="Javascript">
				<begin>
					<regex>&lt;(?=script)</regex>
				</begin>
				<end>
					<regex>/script&gt;</regex>
				</end>
				<import mode="Javascript" keywords-only="yes"/>
				<keywords id="Script Tags" color="#881280" font-style="normal">
					<regex>(\A&lt;\Z)</regex>
					<regex>(&lt;/script[^&gt;]*&gt;)</regex>
				</keywords>
				<state id="Opening Script Tag" color="#881280" font-style="normal" usesymbolsfrommode="HTML" useautocompletefrommode="HTML">
					<begin>
						<regex>\Ascript</regex>
					</begin>
					<end>
						<regex>&gt;</regex>
					</end>
					<import state="Tags"/>
				</state>
				<state-link state="Django-Template"/>
				<state id="JSAutodocComment" type="comment" color="#236E25" font-weight="normal" font-style="italic">
					<begin>
						<regex>/\*"</regex>
					</begin>
					<end>
						<regex>"\*/</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<state id="JSComment" type="comment" color="#236E25" font-weight="normal" font-style="italic">
					<begin>
						<regex>/\*</regex>
					</begin>
					<end>
						<regex>\*/</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<state id="JSSingleComment" type="comment" color="#236E25" font-weight="normal" font-style="italic">
					<begin>
						<regex>//</regex>
					</begin>
					<end>
						<regex>[\n\r]</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<!--STUDIO updated -->
				<state id="JSRegEx" color="#760f15">
					<begin>
						<regex>(?i)(?&lt;=[=(:\+~]|return)\s*/(?![/*+{}?])</regex>
					</begin>
					<end>
						<regex>/[cgimosx]*</regex>
					</end>
					<state id="JSEscaped Characters" color="#d00000">
						<begin>
							<regex>\\</regex>
						</begin>
						<end>
							<regex>.</regex>
						</end>
					</state>
					<state-link state="Django-Template"/>
				</state>
				<state id="JSString" type="string" color="#760f15" font-weight="normal" font-style="normal" usespellchecking="yes">
					<begin>
						<regex>"</regex>
					</begin>
					<end>
						<regex>(((?&lt;!\\)(\\\\)*)|^)"</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<state id="JSSingleString" type="string" color="#760f15" font-weight="normal" font-style="normal" usespellchecking="yes">
					<begin>
						<regex>'</regex>
					</begin>
					<end>
						<regex>(((?&lt;!\\)(\\\\)*)|^)'</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
			</state>
			<state id="Tags" color="#881280" font-style="normal">
				<begin>
					<regex>&lt;</regex>
				</begin>
				<end>
					<regex>&gt;</regex>
				</end>
				<state-link state="Django-Template"/>
				<state id="Strings in Tags" type="string" color="#1A1AA6" useforautocomplete="no">
					<begin>
						<regex>"</regex>
					</begin>
					<end>
						<regex>"</regex>
					</end>
					<state-link state="Django-Template"/>
				</state>
				<keywords id="Attributes in Tags" color="#994500" useforautocomplete="no">
					<regex>([\w-]*)(?=[ \t]*=)</regex>
				</keywords>
				<state-link state="Django-Template"/>
			</state>
		</default>
	</states>
</syntax>

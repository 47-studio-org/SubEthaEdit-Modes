<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">
<syntax>

    <head>
        <name>CORBA IDL</name> <!-- The definitions title -->
        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens>
        <!-- Valid Characters for Variables -->
        <!-- <charsdelimitingtokens></charsdelimitingtokens> -->
    </head>

    <states>
    
        <default id="Base" color="#000" background-color="#fff" font-weight="normal" font-style="normal">
            <keywords id="Keywords" color="#88134F" useforautocomplete="yes">
				<string>abstract</string>
				<string>any</string>
				<string>attribute</string>
				<string>boolean</string>
				<string>case</string>
				<string>char</string>
				<string>const</string>
				<string>context</string>
				<string>custom</string>
				<string>default</string>
				<string>double</string>
				<string>enum</string>
				<string>exception</string>
				<string>factory</string>
				<string>FALSE</string>
				<string>fixed</string>
				<string>float</string>
				<string>in</string>
				<string>inout</string>
				<string>interface</string>
				<string>long</string>
				<string>module</string>
				<string>native</string>
				<string>Object</string>
				<string>octet</string>
				<string>oneway</string>
				<string>out</string>
				<string>private</string>
				<string>public</string>
				<string>raises</string>
				<string>readonly</string>
				<string>sequence</string>
				<string>short</string>
				<string>string</string>
				<string>struct</string>
				<string>supports</string>
				<string>switch</string>
				<string>TRUE</string>
				<string>truncatable</string>
				<string>typedef</string>
				<string>unsigned</string>
				<string>union</string>
				<string>ValueBase</string>
				<string>valuetype</string>
				<string>void</string>
				<string>wchar</string>
				<string>wstring</string>
            </keywords>
            <keywords id="Numbers" color="#00f" useforautocomplete="no">
				<regex>(?&lt;=[^[A-Za-z0-9]]|^)((([0-9]+\.[0-9]*)|(\.[0-9]+)([eE][+\-]?[0-9]+)?[fFlL]?)|((([1-9][0-9]*)|0[0-7]*|(0[xX][0-9a-fA-F]))(([uU][lL]?)|([lL][uU]?))?))(?=[^[A-Za-z0-9]]|$)</regex>
            </keywords>
            <keywords id="FunctionRegex" color="#003369" useforautocomplete="no">
				<regex>([A-Za-z0-9_]+ *)\(</regex>
            </keywords>
            <keywords id="Characters" color="#00f" useforautocomplete="no">
				<regex>('.')</regex>
            </keywords>
            <keywords id="Preprocessor" color="#683821" useforautocomplete="no">
				<regex>(^[ 	]*#([^\n\r])*)</regex>
            </keywords>
        </default>
        
        <state id="Comment" color="#236E25" background-color="none" font-weight="normal" font-style="italic">
            <begin><string>/\*</string></begin>
            <end><regex>\*/</regex></end>
        </state>
        
        <state id="SingleComment" color="#236E25" background-color="none" font-weight="normal" font-style="italic">
            <begin><string>//</string></begin>
            <end><regex>[\n\r]</regex></end>
        </state>
        
        <state id="String" color="#760f15" background-color="none" font-weight="normal" font-style="normal">
            <begin><string>"</string></begin>
            <end><regex>(((?&lt;!\\)(\\\\)*)|^)"</regex></end>
        </state>
    </states>

</syntax>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE syntax SYSTEM "syntax.dtd">
<syntax>

    <head>
        <name>dtrace</name> <!-- The definitions title -->
        <charsintokens><![CDATA[_0987654321abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ@]]></charsintokens> <!-- Valid Characters for Variables -->
        <!-- <charsdelimitingtokens></charsdelimitingtokens> -->
    </head>

    <states>
    
        <default id="Base" scope="meta.default">

            <state id="Block" type="block" foldable="yes" indent="yes" scope="meta.block.curly">
				<begin><regex>{</regex><autoend>}</autoend></begin>
				<end><regex>}</regex></end>
				<import/>
			</state>
			
			
            <keywords id="dtraceFunctions" scope="keyword" useforautocomplete="yes">
                <!-- output -->
                <string>trace</string>
                <string>printf</string>
                <string>printa</string>
                <string>stack</string>
                <string>ustack</string>
                
                <!-- copy -->
                <string>copyinstr</string>
                <string>copyin</string>
                                
                <!-- aggregate stuff -->
                <string>count</string>
                <string>sum</string>
                <string>avg</string>
                <string>min</string>
                <string>max</string>
                <string>quantize</string>
                <string>lquantize</string>
                <string>trunc</string>
                <string>clear</string>
                <string>normalize</string>

                <!-- neat stuff -->
                <string>copyout</string>
                <string>stop</string>
                <string>raise</string>
                <string>chill</string>
                <string>exit</string>
                <string>system</string>
                
            </keywords>
            
            <keywords id="dtraceVariables" scope="keyword" useforautocomplete="yes">
                <string>self</string>
                <string>this</string>
                
                <string>probefunc</string>
                <string>probename</string>

                <string>execname</string>
                <string>pid</string>

                <string>curthread</string>
                <string>curpsinfo</string>

                <string>timestamp</string>
                <string>walltimestamp</string>

                <string>arg0</string>
                <string>arg1</string>
                <string>arg2</string>
                <string>arg3</string>
                <string>arg4</string>
                <string>arg5</string>
                <string>arg6</string>
                <string>arg7</string>
                <string>arg8</string>
                <string>arg9</string>

            </keywords>
            
            <state id="String" scope="string.double">
				<begin><regex>"</regex><autoend>"</autoend></begin>
				<end><regex>(((?&lt;!\\)(\\\\)*)|^)"</regex></end>
			</state>
			
			<keywords id="FunctionRegex" useforautocomplete="no" scope="language.subroutine.function">
				<regex>(^[^#:\n]*:[^:\n]*:[^:\n]*:[^{]*)</regex>
			</keywords>
			
			<state id="Predicate" color="#FF0000" >
            <begin><regex>/[^*]</regex></begin>
            <end><regex>/</regex></end>
        </state>
 
         <state id="Interpreter" scope="keyword.control">
            <begin><regex>^[ 	]*#</regex></begin>
            <end><regex>\n</regex></end>
        </state>
			
        </default>
    </states>

</syntax>